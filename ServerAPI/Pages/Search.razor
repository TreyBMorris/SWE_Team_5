@page "/search/{OurPathParam}"
@using MudBlazor
@using ServerAPI.Data;
@using System.Text.Json.Serialization
@using System.Net.Http;
@using System.Text;
@using System.Text.Json;
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using System;
@using System.Globalization;
@using System.Collections;
@inject IJSRuntime JsRuntime
@inject NavigationManager NavManager
@inject HttpClient HttpClient
@inject IHttpClientFactory ClientFactory

<h3>Search</h3>
<hr />

@if (getBranchesError || records is null)
{
    <p>Unable to get branches from Source. Please try again later.</p>
}
else
{
    @foreach (var record in records)
    {

        if (record.Name.Contains(OurPathParam, StringComparison.OrdinalIgnoreCase))
        {
            <h4 class="name">@record.Name</h4>
            <br />
            <a href="/Item/@record.ID"><img src="@record.Image" alt="Product" class="product" width="125" height="125" /></a>
            <p class="price">$@record.Price</p>
            <br />
        }
        <br />
    }
    <br />
    <hr />
}
@code 
{
    [Parameter]
    public string? OurPathParam { get; set; }

    private IEnumerable<ItemShop>? records = Array.Empty<ItemShop>();
    private bool getBranchesError;
    private bool shouldRender;
    private bool canDownload = false;
    protected override bool ShouldRender() => shouldRender;

    

    // GET Datbase Call
    protected override async Task OnInitializedAsync()
    {
        var request = new HttpRequestMessage(HttpMethod.Get, "https://items.azurewebsites.net/api/get-list?code=eZUuYqrLmiz3EiehlyiBTSABzdwqI0CpcAdfx5yTrnM4AzFut6EZ-w==");

        var client = ClientFactory.CreateClient();

        var response = await client.SendAsync(request);

        if (response.IsSuccessStatusCode)
        {
            using var responseStream = await response.Content.ReadAsStreamAsync();
            records = await JsonSerializer.DeserializeAsync
                <IEnumerable<ItemShop>>(responseStream);
        }
        else
        {
            getBranchesError = true;
        }
        shouldRender = true;
    }
}
