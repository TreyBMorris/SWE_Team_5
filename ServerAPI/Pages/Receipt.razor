@page "/receipt/{PathParam}"
@using MudBlazor
@using ServerAPI.Data;
@using System.Text.Json.Serialization
@using System.Net.Http;
@using System.Text;
@using System.Text.Json;
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using System;
@using System.Globalization;
@using System.Collections;
@inject IJSRuntime JsRuntime
@inject NavigationManager NavManager
@inject HttpClient HttpClient
@inject IHttpClientFactory ClientFactory
@if (getBranchesError || records is null)
{
    <p>Unable to get branches from Source. Please try again later.</p>
}
else
{
    <h1>Thank you! @buyer</h1>
    <br />
    <h4>Your order has been confirmed!</h4>
    <br />
    <br />
    <h4>Order Number:</h4>
    <h4>@ID</h4>
    <br />
    <br />
    <h4>Shipping Address</h4>
    <h4>@shippingAddress</h4>
    <br />
    <br />
    <h4>Order Total:  @orderTotal</h4>
    <h4>We hope to see you again soon!</h4>
}
@code {
    [Parameter]
    public string? PathParam { get; set; }

    private IEnumerable<Sale>? records = Array.Empty<Sale>();
    private bool getBranchesError;
    private bool shouldRender;
    private string? arrivingBy;
    private string? shippingAddress;
    private double? orderTotal;
    private string? ID;
    private string? buyer;

    protected override async Task OnInitializedAsync()
    {
        var request = new HttpRequestMessage(HttpMethod.Get, "https://store-sales.azurewebsites.net/api/get-list?code=4ZjCTRtAtKJX8ylQvsvBOsp8mJaMa2HnCpG1h0CiFDGAAzFuvqHXQg==");

        var client = ClientFactory.CreateClient();

        var response = await client.SendAsync(request);

        if (response.IsSuccessStatusCode)
        {
            using var responseStream = await response.Content.ReadAsStreamAsync();
            records = await JsonSerializer.DeserializeAsync
                <IEnumerable<Sale>>(responseStream);
        }
        else
        {
            getBranchesError = true;
        }
        shouldRender = true;
        foreach (var item in records)
        {

            if (item.ID.Equals(PathParam))
            {
                buyer = item.Buyer;
                ID = item.ID;
                orderTotal = item.Price;
                shippingAddress = item.Address;

            }
        }

    }
}
