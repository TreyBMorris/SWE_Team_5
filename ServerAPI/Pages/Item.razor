@page "/Item/{PathParam}"
@using MudBlazor
@using ServerAPI.Data;
@using System.Text.Json.Serialization
@using System.Net.Http;
@using System.Text;
@using System.Text.Json;
@inject NavigationManager NavManager
@inject HttpClient HttpClient
@inject IHttpClientFactory ClientFactory
<h2>@itemName</h2>
<hr />

@if (getBranchesError || records is null)
{
    <p>Unable to get branches from Source. Please try again later.</p>
}
else
{

    <img src="@itemImage" alt="Product" class="product" />
    <h3 class="description">@itemDescription</h3>
    <br /> 
    <br /> 
    <h4 class = "price">$@itemPrice</h4>
    <br />
    <br />
    <button class="btn btn-primary">ADD TO SHOPPING CART</button>
}
@code{
    [Parameter]
    public string? PathParam { get; set; }

    private IEnumerable<ItemShop>? records = Array.Empty<ItemShop>();
    private bool getBranchesError;
    private bool shouldRender;
    private bool canDownload = false;
    protected override bool ShouldRender() => shouldRender;
    private string? itemName;
    private double? itemPrice;
    private string? itemDescription;
    private string? itemImage;


    protected override async Task OnInitializedAsync()
    {
        var request = new HttpRequestMessage(HttpMethod.Get, "https://items.azurewebsites.net/api/get-list?code=eZUuYqrLmiz3EiehlyiBTSABzdwqI0CpcAdfx5yTrnM4AzFut6EZ-w==");

        var client = ClientFactory.CreateClient();

        var response = await client.SendAsync(request);

        if (response.IsSuccessStatusCode)
        {
            using var responseStream = await response.Content.ReadAsStreamAsync();
            records = await JsonSerializer.DeserializeAsync
                <IEnumerable<ItemShop>>(responseStream);
        }
        else
        {
            getBranchesError = true;
        }
        shouldRender = true;

        foreach (var item in records)
        {

            if (item.ID.Equals(PathParam))
            {
                itemName = item.Name;
                itemPrice = item.Price;
                itemDescription = item.Description;
                itemImage = item.Image;
            }



        }
    }
    





}